{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","randomName","props","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","addEventListener","prevName","ReactDOM","render","document","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,kCAgBE,WACEC,cAAcP,KAAKD,WAjBvB,oBAoBE,WACE,IAAQS,EAAeR,KAAKS,MAApBD,WACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAED,IAJJ,UAMI,IACF,sBAAME,UAAU,cAAhB,SACGb,EAAKS,8BAjChB,GAA2BK,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEtB,MAAyB,CACvBY,WAAYI,IACZO,UAAU,GAHd,EAMEpB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBE,OAAOmB,iBAAiB,eAAe,WACrC,EAAKjB,SAAS,CACZgB,UAAU,OAIdlB,OAAOmB,iBAAiB,SAAS,WAC/B,EAAKjB,SAAS,CACZgB,UAAU,OAIdnB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMmB,EAAW,EAAKzB,MAAMY,WAE5B,EAAKL,SAAS,CACZK,WAAYI,MAGhBR,QAAQC,IAAR,uBAA4BgB,EAA5B,eAA2C,EAAKzB,MAAMY,eACnD,QA7BP,kCAgCE,WACEP,OAAOM,cAAcP,KAAKD,WAjC9B,oBAoCE,WACE,MAAiCC,KAAKJ,MAA9BuB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,WAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOX,WAAYA,WA1CxC,GAAyBG,aCZzBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.06744024.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  time: Date,\n};\n\ntype Props = {\n  randomName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { randomName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {randomName}\n        </strong>\n        { ' ' }\n        time is\n        { ' ' }\n        <span className=\"Clock__time\">\n          {time.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  randomName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    randomName: getRandomName(),\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    window.addEventListener('contextmenu', () => {\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    window.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    this.timerId = window.setInterval(() => {\n      const prevName = this.state.randomName;\n\n      this.setState({\n        randomName: getRandomName(),\n      });\n      // eslint-disable-next-line\n    console.log(`Renamed from ${prevName} to ${this.state.randomName}`);\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, randomName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock randomName={randomName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}